<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<div xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:page="urn:jsptagdir:/WEB-INF/tags/form" xmlns:table="urn:jsptagdir:/WEB-INF/tags/form/fields" version="2.0">
    <jsp:directive.page contentType="text/html;charset=UTF-8"/>
    <jsp:output omit-xml-declaration="yes"/>
    
   	<div id="male_names"><![CDATA[&nbsp;]]></div>
   	<div id="female_names"><![CDATA[&nbsp;]]></div>
    <div class="clear-both"/>

<script type="text/javascript">
<![CDATA[
    function loadGenderNames(gender) {
    	var dojo_table = dojo.byId(gender.toLowerCase() + '_names');
	    var rimg = new Image();
	    rimg.src = "/BabyNames/resources/images/springsource-logo.png";
	    dojo_table.innerHTML = "<br /><br /><br /><img src='/BabyNames/resources/images/springsource-logo.png' alt='loading' />";
		dojo.xhrGet( {
	      url: "/BabyNames/names", // read the url: from the action="" of the
	      content: { find:"ByGender", gender: gender},
	      headers: { "Accept": "application/json" },
	      handleAs:"text",
	      timeout: 5000, // give up after 5 seconds
	      load: function(data, ioArgs){
	    	  var obj = {};
	          obj = JSON.parse(data);
	          var s = '';
	          for (var i = 0; i < obj.length; i++){
	        	  s += '<div class="name_item" id="' + gender.toLowerCase() + '_' + obj[i].id + '">';
	        	  s += '<div class="name_desc">';
	        	  s += '<div class="name">'+ obj[i].name + '</div>';
	        	  s += '<div class="description">'+ obj[i].description + '</div>';
	        	  s += '</div>';
	        	  s += '<div class="vote_thumbup">';
        	  	  s += '<ul><li><a onclick="thumbUp(\'' + obj[i].id + '\')" class="thumbup" id="vote_' + obj[i].id + '">' + obj[i].vote + '</a></li></ul>';
	        	  s += '</div>';
	        	  s += '</div>';
	          }
	        dojo_table.innerHTML = s;
	      },
	      error: function(err, ioArgs){
	        dojo_table.innerHTML = "An unexpected error occurred: " + error;
	      }
	    });
    }
    
    function thumbUp(itemId) {
    	dojo.require("dojo.cookie");
		var allowed = dojo.cookie("voteAllowed");
		
		if (allowed != undefined && allowed != "NO") {
	    	dojo.xhrPut( {
	  	      url: "/BabyNames/names/" + itemId + "/liked",
	  	      headers: { "Accept": "application/json" },
	  	      handleAs:"text",
	  	      timeout: 5000, // give up after 5 seconds
	  	      load: function(data, ioArgs){
	  	    	  var obj = JSON.parse(data);
	  	    	  var nameLiked = dojo.byId('vote_' + itemId);
	  	    	  nameLiked.innerHTML = obj.vote;
	  	    	  dojo.cookie("voteAllowed", "NO");
	  	      }
	    	});
		}
  	      /*,
  	      error: function(err, ioArgs){
  	        // again, ioArgs is useful, but not in simple cases
  	        dojo_table.innerHTML = "An unexpected error occurred: " + error;
  	      }*/
    }
    
    dojo.addOnLoad(function() {
    	var genders = new Array("MALE", "FEMALE");
    	for (var i = 0; i < genders.length; i++) {
    		var gender = genders[i];
    		loadGenderNames(gender);
    	}	
    });

]]>
</script>
</div>
